(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
(function (global){
"use strict";function onNextQuestion(){var e=$("#exerciseId").val();log.verbose(TAG,"onNextQuestion(): questionTime="+questionTime+" exerciseId="+e),0!==questionTime&&(addQuestionTime(e,questionTime),questionTime=0)}function onSetCompleted(){var e=$("#exerciseId").val();log.verbose(TAG,"onSetCompleted(): setTime="+setTime+" exerciseId="+e),addSetTime(e,setTime)}function addBackToVideo(e,a){$.ajax({method:"POST",url:"/exercise/analytics",data:{exerciseId:e,value:1,key:"backToVideo"}}).done(function(e){e.status||console.error(JSON.stringify(e.errMessage)),a()}).fail(function(e,n){console.error(n),a()})}function addQuestionTime(e,a){$.ajax({method:"POST",url:"/exercise/analytics",data:{exerciseId:e,value:a,key:"questionTime"}}).done(function(e){e.status||console.error(JSON.stringify(e.errMessage))}).fail(function(e,a){console.error(a)})}function addSetTime(e,a){$.ajax({method:"POST",url:"/exercise/analytics",data:{exerciseId:e,value:a,key:"setTime"}}).done(function(e){e.status||console.error(JSON.stringify(e.errMessage))}).fail(function(e,a){console.error(a)})}var $="undefined"!=typeof window?window.$:"undefined"!=typeof global?global.$:null,ONE_SECOND_IN_MILLIS=1e3,TAG="Exercise-App",log=require("../libs/logger"),questionTime=0,setTime=0;setInterval(function(){questionTime+=1,setTime+=1},ONE_SECOND_IN_MILLIS),$(".answerInput").on("focus",onNextQuestion),$(".backToVideoBtn").on("click",function(e){var a=$(this).data("exercise-id"),n=$(this).data("href");addBackToVideo(a,function(){window.location.href=n})}),$(".btn_submit_answer").on("click",function(e){if(onNextQuestion(),confirm("Masukan jawaban?")){onSetCompleted();var a=[];$("#questionSubmit").children().each(function(e,n){a.push($(n).serializeObject())}),$.post("/submitAnswer",{userAnswers:a,generatedExerciseId:$("input[name=generatedExerciseId]").val(),exerciseId:$("input[name=exerciseId]").val()}).done(function(e){if(e.status){$("input").prop("disabled",!0),$("input").prop("read-only",!0);var a=e.data.isAnswerCorrect,n=e.data.realAnswers,i=e.data.currentScore,r=(e.data.bestScore,e.data.starsHTML),s=e.data.ranking,t=e.data.currentTimeFinish,o=e.data.currentRanking,d=e.data.totalRanking,u=e.data.isPerfectScore;$("#currentScore").removeClass("hidden"),$("#currentScore").text("Nilai yang diperoleh: "+i),$(".bestScore").html(r),$(".rankingScore").html(s),u?$(".rankingScore").append("<p>Ranking kamu adalah "+o+" dari "+d+" dan selesai dengan waktu penyelesaian "+t+" detik</p>"):($(".bestScore").html("<p>Maaf, hanya yang nilai di atas 80 yang mendapat bintang</p>"),$(".rankingScore").append("<p>Maaf, hanya nilai 100 yang masuk penilaian</p>")),n.forEach(function(e,n){var i=[];for(var r in e)i.push(r+" = "+e[r]);$(".resultAnswer_"+n).empty();var s=null;s=$(!0===a[n]?'<p style="color:green">Benar</p>':'<p style="color:red;">Salah. Jawaban yang benar: '+i.join(", ")+"</p>"),$(".resultAnswer_"+n).append(s)}),$(".btn_submit_answer").addClass("hidden"),$(".btn_retry_question").removeClass("hidden")}else $("#submissionError").removeClass("hidden"),$("#submissionError").text("Gagal memasukan jawaban: "+e.errMessage),console.error("Gagal memasukan jawaban: "+e.errMessage,e)}).fail(function(e){$("#submissionError").removeClass("hidden"),$("#submissionError").text("Gagal memasukan jawaban: server mengalami kendala"),console.error(e)})}});

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"../libs/logger":2}],2:[function(require,module,exports){
"use strict";function doLog(o,e,r){var g=logLevelOrders.indexOf(logLevel);if(logLevelOrders.indexOf(o)>=g){("error"===o?console.error:console.log)("["+e+"] "+r)}}var logLevelOrders=["debug","verbose","info","error"],logLevel="debug",log={};log.debug=function(o,e){doLog("debug",o,e)},log.verbose=function(o,e){doLog("verbose",o,e)},log.info=function(o,e){doLog("info",o,e)},log.error=function(o,e){doLog("error",o,e)},log.setLogLevel=function(o){logLevel=o},module.exports=log;

},{}]},{},[1]);
