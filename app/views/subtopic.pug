extends layout/index.pug
append head
  link(href='/assets/vendor/video.js/dist/video-js.min.css' rel="stylesheet")

include includes/utils.pug

block contents
  div.container
    h1.text-center #{topic.topic} - #{subtopic.subtopic}
    h4.text-center #{subtopic.description}
    h4.text-center
      a(href='/') Back to Modules
    hr
    - var content = JSON.parse(subtopic.data)
      | !{content.detail}
    #ytPlayerContainer

    div.text-center(style="margin-top:50px;margin-bottom:50px;")
      each exercise, index in exercises
        - var exerciseUrl = `/${topic.id}/${getSlug(topic.topic)}/${subtopic.id}/${getSlug(subtopic.subtopic)}/${exercise.id}/latihan-${index+1}`

        // There's no elegant way of having a button with href. If we use a however, it can't be disabled easily
        // TODO: Use 'a' with css to disable
        if (!isAuthenticated)
          input.btn.btn-primary(type="button" value=`Latihan ${index+1}` href=exerciseUrl style="margin-top:10px;" disabled="disabled")
        else
          a.btn.btn-primary(type="button" href=exerciseUrl style="margin-top:10px;")= `Latihan ${index+1}`
          + renderExerciseStars(exercise.stars)
        br
      if !isAuthenticated
        br
        | Please #[a(href='/login') login] or #[a(href='/register') register] to access exercises.

block footer
  script(src="/assets/vendor/video.js/dist/video.min.js")
  script(src="/assets/vendor/videojs-youtube/dist/Youtube.min.js")
  script.
    $(document).ready(function() {
      var youtubeURL = `#{content.youtube_url}`
      var playerYoutube = $('<video class="video-js" id="ytPlayer" style="width:100%; height:500px;" controls data-setup=\'{"techOrder": ["youtube"],"sources": [{"type": "video/youtube","src": "' + youtubeURL + '"}]}\'></video>')
      $('#ytPlayerContainer').append(playerYoutube)

      videojs('#ytPlayer').ready(function(e) {
        var player = this

        /*
          Do something when you play player
        */
        player.on('play', function() {
        })

        /*
          Do something when you pause player
        */
        player.on('pause', function() {
        })

        /*
          Do something when you changing timer of player
        */
        player.on('seeking', function() {
        })
      })
    })
