const Sequelize=require("sequelize");function addTables(e,i){return i.Subject=e.define("subject",{id:{type:Sequelize.INTEGER,primaryKey:!0,autoIncrement:!0},subject:{type:Sequelize.STRING,unique:!0},description:{type:Sequelize.STRING}}),i.Topic=e.define("topic",{id:{type:Sequelize.INTEGER,primaryKey:!0,autoIncrement:!0},topic:{type:Sequelize.STRING,unique:!0},description:{type:Sequelize.STRING},topicNo:{type:Sequelize.INTEGER}}),i.Topic.belongsTo(i.Subject),i.Subtopic=e.define("subtopics",{id:{type:Sequelize.INTEGER,primaryKey:!0,autoIncrement:!0},subtopic:{type:Sequelize.STRING,unique:!0},description:{type:Sequelize.STRING},data:{type:Sequelize.TEXT("long")},subtopicNo:{type:Sequelize.INTEGER}}),i.Subtopic.belongsTo(i.Topic),i.Tag=e.define("tag",{id:{type:Sequelize.INTEGER,primaryKey:!0,autoIncrement:!0},tag:{type:Sequelize.STRING,unique:!0},description:{type:Sequelize.STRING}}),i.Tag.belongsTo(i.Topic),i.TopicDependency=e.define("topicDependency",{id:{type:Sequelize.INTEGER,primaryKey:!0,autoIncrement:!0},topicId:{type:Sequelize.INTEGER,references:{model:i.Topic,key:"id"},unique:"compositeIndex"},dependencyId:{type:Sequelize.INTEGER,references:{model:i.Topic,key:"id"},unique:"compositeIndex"},description:Sequelize.STRING}),i.School=e.define("schools",{id:{type:Sequelize.INTEGER,primaryKey:!0,autoIncrement:!0},identifier:{type:Sequelize.STRING,unique:!0},name:{type:Sequelize.TEXT},address:{type:Sequelize.TEXT},phone:{type:Sequelize.STRING},logo:{type:Sequelize.TEXT}}),i.User=e.define("users",{id:{type:Sequelize.INTEGER,primaryKey:!0,autoIncrement:!0},username:{type:Sequelize.STRING},saltedPass:{type:Sequelize.STRING},salt:{type:Sequelize.STRING},email:{type:Sequelize.STRING},fullName:{type:Sequelize.STRING},grade:{type:Sequelize.STRING}}),i.User.belongsTo(i.School),i.Exercise=e.define("exercises",{id:{type:Sequelize.INTEGER,primaryKey:!0,autoIncrement:!0},data:{type:Sequelize.TEXT}}),i.Exercise.belongsTo(i.Subtopic),i.GeneratedExercise=e.define("generatedExercise",{id:{type:Sequelize.INTEGER,primaryKey:!0,autoIncrement:!0},exerciseHash:{type:Sequelize.STRING},knowns:{type:Sequelize.TEXT},unknowns:{type:Sequelize.TEXT},userAnswer:{type:Sequelize.TEXT},submitted:{type:Sequelize.BOOLEAN,defaultValue:!1},submittedAt:{type:Sequelize.DATE},score:{type:Sequelize.FLOAT},timeFinish:{type:Sequelize.FLOAT},idealTime:{type:Sequelize.FLOAT},onCloud:{type:Sequelize.BOOLEAN,defaultValue:!0}}),i.GeneratedExercise.belongsTo(i.Exercise),i.GeneratedExercise.belongsTo(i.User),i.Videos=e.define("videos",{id:{type:Sequelize.INTEGER,primaryKey:!0,autoIncrement:!0},filename:{type:Sequelize.STRING,unique:!0},sourceLink:{type:Sequelize.TEXT}}),i.Videos.belongsTo(i.Subtopic),i.WatchedVideo=e.define("watchedVideos",{id:{type:Sequelize.INTEGER,primaryKey:!0,autoIncrement:!0},date:{type:Sequelize.DATE,defaultValue:e.fn("NOW")},onCloud:{type:Sequelize.BOOLEAN,defaultValue:!0}}),i.WatchedVideo.belongsTo(i.Videos),i.WatchedVideo.belongsTo(i.User),i.Images=e.define("images",{id:{type:Sequelize.INTEGER,primaryKey:!0,autoIncrement:!0},filename:{type:Sequelize.STRING,unique:!0},sourceLink:{type:Sequelize.TEXT}}),i.Analytics=e.define("analytics",{id:{type:Sequelize.INTEGER,primaryKey:!0,autoIncrement:!0},type:{type:Sequelize.Sequelize.ENUM(["video","exercise"])},key:{type:Sequelize.STRING},value:{type:Sequelize.INTEGER},userId:Sequelize.INTEGER,videoId:Sequelize.INTEGER,exerciseId:Sequelize.INTEGER,onCloud:{type:Sequelize.BOOLEAN,defaultValue:!0}}),i.GeneratedTopicExercise=e.define("generatedTopicExercises",{id:{type:Sequelize.INTEGER,primaryKey:!0,autoIncrement:!0},submitted:{type:Sequelize.BOOLEAN,defaultValue:!1},submittedAt:{type:Sequelize.DATE},score:{type:Sequelize.FLOAT},timeFinish:{type:Sequelize.FLOAT},topicExerciseHash:{type:Sequelize.STRING},exerciseDetail:{type:Sequelize.TEXT},idealTime:{type:Sequelize.FLOAT},onCloud:{type:Sequelize.BOOLEAN,defaultValue:!0}}),i.GeneratedTopicExercise.belongsTo(i.Topic),i.GeneratedTopicExercise.belongsTo(i.User),i.Synchronization=e.define("synchronization",{schoolIdentifier:{type:Sequelize.STRING},serverHash:{type:Sequelize.STRING},localId:{type:Sequelize.INTEGER},cloudId:{type:Sequelize.INTEGER},tableName:{type:Sequelize.STRING}}),i.SyncHistory=e.define("syncHistories",{id:{type:Sequelize.INTEGER,primaryKey:!0,autoIncrement:!0},schoolIdentifier:{type:Sequelize.STRING},status:{type:Sequelize.ENUM(["Syncing","Success","Failed"])},date:{type:Sequelize.STRING}}),i.LocalMetaData=e.define("localMetaData",{id:{type:Sequelize.INTEGER,primaryKey:!0,autoIncrement:!0},key:{type:Sequelize.STRING,unique:!0},value:{type:Sequelize.STRING}}),i}module.exports=addTables;
//# sourceMappingURL=data:application/json;charset=utf8;base64,
