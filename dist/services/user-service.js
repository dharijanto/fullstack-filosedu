"use strict";const Sequelize=require("sequelize"),Promise=Sequelize.Promise,log=require("npmlog"),path=require("path"),Crypto=require(path.join(__dirname,"../lib/utils/crypto")),Formatter=require(path.join(__dirname,"../lib/formatter")),TAG="UserService";class UserService{constructor(e,s){this._sequelize=e,this._models=s,null==this._models.User&&log.error(TAG,"constructor(): models doesn't have UserAccount defined!")}login(e){const s=e.username,r=e.password,t=e.schoolId;return this._models.User.findOne({where:{username:s,schoolId:t}}).then(e=>{if(e){if("active"in e&&!e.active)return{status:!1,errMessage:"Account is not activated yet. Check your email to activate.",errCode:2,errData:{userId:e.id}};return Crypto.saltPass(r,e.salt)===e.saltedPass?{status:!0,user:e}:{status:!1,errMessage:"Invalid username or password.",errCode:1}}return{status:!1,errMessage:"Invalid username or password.",errCode:1}})}validateRegistrationCredential(e,s=!1,r=!1){const t=e.username,a=e.password,i=e.passwordConfirm,o=e.email,n=e.fullName,l=e.schoolId,d=e.grade;return log.verbose(TAG,"validateRegistrationCredential(): credential="+JSON.stringify(e)),new Promise((u,h)=>{const m=[],c={};if(Formatter.validateUsername(t)?c.username=t.toLowerCase():m.push("Username harus dimulai dengan huruf antara 5-16 karakter"),!s)if(a!==i)m.push("Password tidak sama!");else if(a.length<4)m.push("Password minimal 4 karakter!");else{const e=Crypto.genSaltedPass(a);c.saltedPass=e.passwordHash,c.salt=e.salt}o&&(Formatter.validateEmail(o)?c.email=o:m.push("Format email salah")),n?c.fullName=n:m.push("Nama lengkap harus diisi"),l?c.schoolId=l:m.push("Sekolah harus dipilih"),d?c.grade=d:m.push("Kelas harus dipilih");const p=r?{id:e.id}:Sequelize.and({username:t},{schoolId:l});return this._models.User.findOne({where:p}).then(e=>{r&&!e?m.push("Username tidak ditemukan"):!r&&e&&m.push("Username sudah terdaftar"),m.length?u({status:!1,errMessage:m.join(", ")}):u({status:!0,data:c})})})}register(e,s=!0){return this.validateRegistrationCredential(e,!1).then(e=>e.status?this._models.User.create(e.data).then(e=>({status:!0,user:e})):e)}getAll(){return this._models.User.findAll({include:[{model:this._models.School}]}).then(e=>({status:!0,data:e})).catch(e=>e)}deleteById(e){return this._models.User.destroy({where:{id:e}})}updateCredential(e){const s=!("password"in e&&e.password.length>0);return this.validateRegistrationCredential(e,s,!0).then(s=>s.status?this._models.User.update(s.data,{where:{id:e.id}}).then(e=>({status:!0,data:e})).catch(e=>{if(console.error(e),"SequelizeUniqueConstraintError"===e.name)resolve({status:!1,errMessage:e.message});else{if("SequelizeForeignKeyConstraintError"!==e.name)throw e;resolve({status:!1,errMessage:e.message})}}):s)}}module.exports=UserService;
//# sourceMappingURL=data:application/json;charset=utf8;base64,
