const path=require("path"),log=require("npmlog"),AppConfig=require(path.join(__dirname,"../../app-config")),BaseController=require(path.join(__dirname,"base-controller")),ImageService=require(path.join(__dirname,"../../services/image-service")),PathFormatter=require(path.join(__dirname,"../../lib/path-formatter")),SchoolService=require(path.join(__dirname,"../../services/school-service")),TAG="SchoolManagementController";class SchoolManagementController extends BaseController{constructor(e){super(e);const t=new SchoolService(this.getDb().sequelize,this.getDb().models),a=new ImageService(this.getDb().sequelize,this.getDb().models);this.addInterceptor((e,t,a)=>{log.verbose(TAG,"req.path="+e.path),a()}),this.routeGet("/schoolmanagement",(e,t,a)=>{t.render("school-management")}),this.routeGet("/school/management/get",(e,a,o)=>{t.getAll().then(e=>{a.json(e)})}),this.routePost("/school/management/add",(e,a,o)=>{t.create({modelName:"School",data:e.body}).then(e=>{a.json(e)}).catch(e=>{o(e)})}),this.routePost("/school/management/edit",(e,a,o)=>{t.update({modelName:"School",data:e.body}).then(e=>{a.json(e)}).catch(e=>{o(e)})}),this.routePost("/school/management/delete",(e,a,o)=>{t.deleteById(e.body.id).then(e=>{a.json({status:!0})}).catch(e=>{o(e)})}),this.routeGet("/school/images/get",(e,t,o)=>{log.verbose(TAG,`req.path = ${e.path}`),a.getImages().then(e=>e.status?t.json({status:!0,data:e.data}):t.json({status:!1})).catch(e=>{o(e)})}),this.routePost("/school/images/add",function(e,t,a){t.setTimeout(48e4),a()},(e,t,o)=>{log.verbose(TAG,`req.path = ${e.path}`),ImageService.uploadImageMiddleware()(e,t,s=>{s?t.json({status:!1,errMessage:s.message}):a.uploadAndSaveImageToDB(e.file.filename).then(e=>{e.status?t.json({status:!0,data:{url:AppConfig.IMAGE_MOUNT_PATH+e.data.filename,public_id:e.data.filename,originalName:e.data.filename,created_at:e.data.filename.split("_")[0]}}):t.json({status:!0,data:{}})}).catch(e=>{console.error(e),o(e)})})}),this.routePost("/school/images/delete",(e,t,o)=>{log.verbose(TAG,`req.path = ${e.path}`),a.deleteImage(e.query.publicId).then(e=>{t.json(e)}).catch(e=>{o(e)})})}}module.exports=SchoolManagementController;
//# sourceMappingURL=data:application/json;charset=utf8;base64,
