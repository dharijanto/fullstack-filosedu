"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const Promise=require("bluebird"),course_service_1=require("../../services/course-service"),exercise_helper_1=require("../utils/exercise-helper"),topic_exercise_service_1=require("../../services/topic-exercise-service");let path=require("path"),log=require("npmlog"),pug=require("pug"),BaseController=require(path.join(__dirname,"base-controller")),PathFormatter=require(path.join(__dirname,"../../lib/path-formatter")),PassportHelper=require(path.join(__dirname,"../utils/passport-helper")),Utils=require(path.join(__dirname,"../../lib/utils"));const TAG="CourseController";class CourseController extends BaseController{constructor(e){super(e),this.addInterceptor((e,r,t)=>{t()}),this.routeGet("/",(e,r,t)=>{course_service_1.default.getTopicDetails(e.user?e.user.id:null).then(e=>{e.status&&e.data?(r.locals.topics=e.data.topics,r.render("topics")):t(e.errMessage)})}),this.routeGet("/topics/:topicId/:topicSlug/review",PassportHelper.ensureLoggedIn(),(e,r,t)=>{let s=e.params.topicId,i=e.user.id;topic_exercise_service_1.default.getFormattedExercise(s,i).then(e=>{e.status&&e.data?(r.locals.idealTime=e.data.idealTime,r.locals.elapsedTime=e.data.elapsedTime,r.locals.topicName=e.data.topicName,r.locals.bundle=this._assetBundle,r.locals.formattedExercises=e.data.formattedExercises,r.render("topic-exercise")):t(e.errMessage)}).catch(e=>{console.error(e),t(e)})}),this.routeGet("/topics/:topicId/getLeaderboard",(e,r,t)=>{let s=e.params.topicId;void 0===s?r.json({status:!1,errMessage:"topicId is needed"}):e.isAuthenticated?topic_exercise_service_1.default.getExerciseLeaderboard(s).then(e=>{r.json(e)}).catch(e=>{t(e)}):r.json({status:!1,errMessage:"Unauthorized"})}),this.routePost("/topics/:topicId/:topicSlug/review",(e,r,t)=>{let s=e.body.userAnswers,i=e.params.topicId,a=e.user.id;return log.verbose(TAG,`submitAnswer.POST(): userId=${a} topicId=${i} userAnswers=${s}`),topic_exercise_service_1.default.getGeneratedTopicExercise(a,i).then(e=>{if(e.status&&e.data){const t=e.data,o=e.data.id;let c=JSON.parse(e.data.exerciseDetail);return topic_exercise_service_1.default.gradeExercise(c,s).then(e=>{if(console.log(JSON.stringify(e,null,2)),e.status&&e.data){const d=e.data,u=exercise_helper_1.default.countTimeFinish(t.createdAt);return topic_exercise_service_1.default.finishExercise(o,d.score,u,c,s).then(e=>{if(!e.status)return r.json({status:!1,errMessage:e.errMessage});Promise.join(topic_exercise_service_1.default.getExerciseStars(a,i),topic_exercise_service_1.default.getCurrentRanking(u,i),topic_exercise_service_1.default.getTotalRanking(i),topic_exercise_service_1.default.getExerciseLeaderboard(i),topic_exercise_service_1.default.getExerciseTimers(a,i)).spread((e,t,s,i,a)=>{r.json({status:!0,data:{grade:d,starsHTML:e.data,timersHTML:a.data,ranking:i.data,timeFinish:u,currentRanking:t.data.count,totalRanking:s.data.count}})})})}return r.json({status:!1,errMessage:e.errMessage})})}throw new Error(e.errMessage)})})}initialize(){return new Promise((e,r)=>{PathFormatter.hashAsset("app","/assets/js/topic-exercise-app-bundle.js").then(r=>{this._assetBundle=r,e()}).catch(e=>{r(e)})})}}module.exports=CourseController;
//# sourceMappingURL=data:application/json;charset=utf8;base64,
